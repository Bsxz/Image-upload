{"version":3,"file":"static/js/756.51047d8e.chunk.js","mappings":"oOAOMA,EAAQC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uKAQxB,WAAeC,EAAAA,EAAAA,KAAS,WACpB,IAAOC,GAAaC,EAAAA,EAAAA,KAAbD,UACDE,GAAWC,EAAAA,EAAAA,MA0BjB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACZ,EAAK,CAAAW,SAAA,EACFF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,KAAK,QACLC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,IAEVE,MAAO,CACHC,SAAU,KAEdC,cAAe,CACXC,UAAU,GAEdC,SA3CG,SAACC,GAChBlB,EAAUmB,YAAYD,EAAOE,UAC7BpB,EAAUqB,YAAYH,EAAOI,UAC7BtB,EAAUuB,WACLC,MAAK,SAAAC,GACFC,EAAAA,GAAAA,QAAgB,4BAChBxB,EAAS,IACb,IACCyB,OAAM,SAAAC,GACHF,EAAAA,GAAAA,MAAc,2BAClB,GACR,EAiCgBG,aAAa,MAAKvB,SAAA,EAElBF,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNsB,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACH,CACIC,UAvCH,SAACC,EAAMC,GAC5B,OAAKA,EACD,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,oDACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,2FAC1DD,QAAQX,UAHIW,QAAQC,OAAO,6CAItC,IAoCsB/B,UAEFF,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,OAGVnC,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNsB,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACH,CACIS,UAAU,EACVd,QAAS,kCAEb,CACIe,IAAK,EACLf,QAAS,8CAEb,CACIgB,IAAK,GACLhB,QAAS,qDAEfpB,UAEFF,EAAAA,EAAAA,KAACmC,EAAAA,EAAAA,SAAc,OAEnBnC,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNsB,MAAM,eACNrB,KAAK,kBACLsB,MAAO,CACH,CACIS,UAAU,EACVd,QAAS,wCAjEb,SAAHiB,GAAA,IAAKC,EAAaD,EAAbC,cAAa,MAAO,CAC1CZ,UAAS,SAACC,EAAMC,GACZ,OAAIU,EAAc,cAAgBV,EAAcE,QAAQX,UACjDW,QAAQC,OAAO,6CAC1B,EACH,GA+DqB/B,UAEFF,EAAAA,EAAAA,KAACmC,EAAAA,EAAAA,SAAc,OAEnBnC,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNI,WAAY,CACRiC,OAAQ,EACRlC,KAAM,IACRL,UAEFF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQ1C,SAAC,0BAQjE,G","sources":["pages/Register.js"],"sourcesContent":["import React from \"react\";\nimport {useNavigate} from \"react-router\";\nimport {observer} from \"mobx-react\"\nimport styled from \"styled-components\";\nimport {Form, Button, Input, message} from 'antd'\nimport {useStore} from \"../stores\";\n\nconst Login = styled.div`\n  max-width: 600px;\n  padding: 20px;\n  margin: 40px auto;\n  box-shadow: 2px 2px 4px 1px rgba(0, 0, 0, .2);\n  border-radius: 5px;\n  text-align: center;\n`\nexport default observer(() => {\n    const {AuthStore} = useStore()\n    const navigate = useNavigate()\n    const bindChange = (values) => {\n        AuthStore.setUsername(values.username)\n        AuthStore.setPassword(values.password)\n        AuthStore.register()\n            .then(resolve => {\n                message.success(`登录成功`)\n                navigate('/')\n            })\n            .catch(err => {\n                message.error(`注册失败`)\n            })\n    };\n    const validateUsername = (rule, value) => {\n        if (!value) return Promise.reject('用户名不能为空')\n        if (/\\W/.test(value)) return Promise.reject('只能是数字下划线')\n        if (value.length < 4 || value.length > 10) return Promise.reject('用户名最小长度为4，最大长度为10')\n        return Promise.resolve()\n    }\n\n    const validateConfirm = ({getFieldValue}) => ({\n        validator(rule, value) {\n            if (getFieldValue('password') === value) return Promise.resolve()\n            return Promise.reject('两次密码不一致')\n        }\n    })\n    return (\n        <>\n            <Login>\n                <h1>登入</h1>\n                <Form\n                    name=\"basic\"\n                    labelCol={{\n                        span: 8,\n                    }}\n                    wrapperCol={{\n                        span: 10,\n                    }}\n                    style={{\n                        maxWidth: 600,\n                    }}\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={bindChange}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                validator: validateUsername\n                            }\n                        ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入密码',\n                            },\n                            {\n                                min: 8,\n                                message: '密码最少八位数'\n                            },\n                            {\n                                max: 14,\n                                message: '密码最多十六位数'\n                            }\n                        ]}\n                    >\n                        <Input.Password/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"passwordConfirm\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '再次输入密码',\n                            },\n                            validateConfirm\n                        ]}\n                    >\n                        <Input.Password/>\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 10,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            登入\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Login>\n        </>\n    )\n})\n"],"names":["Login","styled","_templateObject","_taggedTemplateLiteral","observer","AuthStore","useStore","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","Form","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","resolve","message","catch","err","autoComplete","label","rules","validator","rule","value","test","Promise","reject","length","Input","required","min","max","_ref","getFieldValue","offset","Button","type","htmlType"],"sourceRoot":""}